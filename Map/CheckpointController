// ============================================================
// Readme of CheckpointController
// ============================================================ 

// ============================================================
// Description 
// ============================================================ 

This script manages multiple checkpoints and their restoration process.  
It ensures that inactive checkpoints respawn their meshes when triggered, typically after player death or reset events.  

// ============================================================
// Responsibilities
// ============================================================  

- Holds references to all checkpoints in the scene.  
- Tracks whether the player is dead to coordinate respawn logic.  
- Iterates through all checkpoints and restores meshes for those not yet activated.  
- Provides a central method (`respawnMeshes`) to reset checkpoint visuals and gameplay state.  
- Logs respawn actions for debugging purposes.  

// ============================================================
// End of readme
// ============================================================  



using UnityEngine;

public class CheckpointController : MonoBehaviour {

    // ============================================================
    // References
    // ============================================================

    public Checkpoint[] checkpoints;

    // ============================================================
    // State
    // ============================================================

    public bool isPlayerDead = false;

    // ============================================================
    // Public Methods
    // ============================================================

    public void respawnMeshes() {

        foreach (Checkpoint checkpoint in checkpoints) {

            if (!checkpoint.isCheckpointed) {

                checkpoint.restoreCheckpointMeshes();

            }
        }

        Debug.Log("Respawn completed.");

    }
}
