// ============================================================  
// Readme of FloatEffect  
// ============================================================  

// ============================================================  
// Description  
// ============================================================  

This script creates a smooth vertical floating motion for a GameObject.  
It moves the object up and down over time using a sine wave function.  

// ============================================================  
// Responsibilities  
// ============================================================  

- Stores the initial position of the GameObject at startup.  
- Calculates vertical displacement using `Mathf.Sin` and a configurable speed and distance.  
- Updates the GameObjectâ€™s position each frame to achieve a smooth floating effect.  
- Allows configuration of the float speed (`speed`) and vertical range (`distance`) via the inspector.  

// ============================================================  
// End of readme  
// ============================================================  



using UnityEngine;

public class FloatEffect : MonoBehaviour {

    // ============================================================
    // Movement Settings
    // ============================================================

    [SerializeField] private float speed;       // Speed of the floating motion
    [SerializeField] private float distance;    // Distance of the vertical movement

    // ============================================================
    // Internal Variables
    // ============================================================

    private Vector3 initialPosition;

    // ============================================================
    // Unity Lifecycle
    // ============================================================

    void Start() {

        initialPosition = transform.position;

    }

    void Update() {

        float displacementY = Mathf.Sin(Time.time * speed) * distance;
        transform.position = new Vector3(initialPosition.x, initialPosition.y + displacementY, initialPosition.z);

    }
}
