// ============================================================
// Readme of RandomJokeGenerator
// ============================================================ 

// ============================================================
// Description 
// ============================================================ 

This script manages the random generation of AI-driven jokes during gameplay.  
It ensures jokes are only played under specific conditions, such as when the player is not seated and not in space, and coordinates timing with other AI dialogue.  

// ============================================================
// Responsibilities
// ============================================================  

- Stores a configurable wait time between jokes.  
- References the playerâ€™s `FPS_Controller` and the `GameManager`.  
- Waits for valid conditions (player not seated, not in space, AI not already talking).  
- Uses coroutines to manage joke timing and avoid overlap with other dialogue.  
- Plays random joke lines from the AI dialogue system using a predefined prefix.  

// ============================================================
// End of readme
// ============================================================  



using UnityEngine;
using System.Collections;

public class RandomJokeGenerator : MonoBehaviour {

    // ============================================================
    // Settings
    // ============================================================

    public float jokeWaitTime;

    // ============================================================
    // References
    // ============================================================

    private FPS_Controller fpsControllerScript;
    private GameManager gameManagerScript;

    // ============================================================
    // State
    // ============================================================

    private bool waitingForNextJoke = false;

    // ============================================================
    // Unity Lifecycle
    // ============================================================

    private void Start() {

        gameManagerScript = FindFirstObjectByType<GameManager>();

    }

    private void Update() {

        if (fpsControllerScript == null) {

            GameObject playerObj = GameObject.FindWithTag("Player");

            if (playerObj != null) {

                fpsControllerScript = playerObj.GetComponent<FPS_Controller>();

            }

            return;

        }

        if (fpsControllerScript.isSeated == false && waitingForNextJoke == false && gameManagerScript.inSpace == false) {

            StartCoroutine(waitForJoke());

        }
    }

    // ============================================================
    // Coroutine
    // ============================================================

    private IEnumerator waitForJoke() {

        waitingForNextJoke = true;

        // Wait until AI finishes talking
        yield return new WaitUntil(() => IAController.instance.isIATalking == false);

        yield return new WaitForSeconds(jokeWaitTime);

        IAController.instance.playRandomLine("JOKE_GENERIC_");

        yield return new WaitUntil(() => IAController.instance.isIATalking == false);

        waitingForNextJoke = false;

    }
}
