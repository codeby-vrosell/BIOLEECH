// ============================================================
// Readme of MegaphoneGenerator
// ============================================================ 

// ============================================================
// Description 
// ============================================================ 

This script manages periodic megaphone announcements in space.  
It waits for a set amount of time before triggering a random propaganda line from the AI dialogue system.  

// ============================================================
// Responsibilities
// ============================================================  

- Holds a configurable wait time before each announcement.  
- References the `GameManager` to check if the player is currently in space.  
- Starts and manages a coroutine to handle timed announcements.  
- Calls the AI controller to play a random propaganda line.  
- Ensures announcements do not overlap by tracking state with a waiting flag.  

// ============================================================
// End of readme
// ============================================================  



using UnityEngine;
using System.Collections;

public class MegaphoneGenerator : MonoBehaviour {

    // ============================================================
    // Configuration
    // ============================================================

    public float waitTimeForAnnouncement;

    // ============================================================
    // References & State
    // ============================================================

    private GameManager gameManagerScript;
    private bool waitingForAnnouncement = false;

    // ============================================================
    // Unity Lifecycle
    // ============================================================

    private void Start() {

        gameManagerScript = Object.FindFirstObjectByType<GameManager>();

    }

    private void Update() {

        // Start announcement coroutine only if not already waiting and the player is in space
        if (!waitingForAnnouncement && gameManagerScript.inSpace) {

            StartCoroutine(waitForAnnouncement());

        }
    }

    // ============================================================
    // Announcement Coroutine
    // ============================================================

    private IEnumerator waitForAnnouncement() {

        waitingForAnnouncement = true;

        // Wait for the configured time before playing a line
        yield return new WaitForSeconds(waitTimeForAnnouncement);

        IAController.instance.playRandomLine("NAVE_PROPAGANDA_");

        Debug.Log("Announcement line is being played");

        waitingForAnnouncement = false;

    }
}
