// ============================================================  
// Readme of ScreenWeaponController  
// ============================================================  

// ============================================================  
// Description  
// ============================================================  

This script manages the weapon display screen, showing the player's bullet count and slime percentage.  
It also provides a visual blink effect when the bullets are depleted.  

// ============================================================  
// Responsibilities  
// ============================================================  

- References `FPControllerWeapon`, `SlimeWeaponController`, and `ShotWeaponController` to retrieve relevant data.  
- Displays bullets and slime percentage on a `TextMeshProUGUI` screen.  
- Applies a blinking effect to the bullet count when it reaches zero, using alpha modulation.  
- Updates the screen text each frame to reflect current bullets and slime.  
- Dynamically finds and assigns the player script if not manually set.  
- Exposes a public method `retrievePlayerScript()` to refresh the player reference at runtime.  
- Ensures updates occur only when necessary references are assigned, avoiding null errors.  

// ============================================================  
// End of readme  
// ============================================================  



using UnityEngine;
using TMPro;

public class ScreenWeaponController : MonoBehaviour {

    // ============================================================
    // References
    // ============================================================

    private FPControllerWeapon fpControllerWeaponScript;
    private SlimeWeaponController slimeWeaponControllerScript;
    private ShotWeaponController shotWeaponControllerScript;

    [SerializeField] private TextMeshProUGUI screenText;

    // ============================================================
    // Settings
    // ============================================================

    [SerializeField] private float blinkSpeed;

    // ============================================================
    // Unity Methods
    // ============================================================

    void start() {

        slimeWeaponControllerScript = GetComponent<SlimeWeaponController>();
        shotWeaponControllerScript = GetComponent<ShotWeaponController>();

    }

    void update() {

        // Ensure player reference exists
        if (fpControllerWeaponScript == null) {

            GameObject playerObj = GameObject.FindWithTag("Player");

            if (playerObj != null) {

                fpControllerWeaponScript = playerObj.GetComponent<FPControllerWeapon>();

            }
        }

        if (fpControllerWeaponScript == null || screenText == null) {

            return;

        }

        if (shotWeaponControllerScript != null && slimeWeaponControllerScript != null) {

            string bulletText;

            // Blink effect when bullets are zero
            if (shotWeaponControllerScript.bullets == 0) {

                float alpha = Mathf.Lerp(0.2f, 1f, (Mathf.Sin(Time.time * blinkSpeed) + 1f) / 2f);
                int alphaHex = Mathf.RoundToInt(alpha * 255);
                string alphaHexStr = alphaHex.ToString("X2"); // Convert alpha to 2-digit hex

                bulletText = "<color=#F83D49" + alphaHexStr + ">" + shotWeaponControllerScript.bullets.ToString() + "/100</color>";

            }

            else {

                bulletText = shotWeaponControllerScript.bullets.ToString() + "/100";

            }

            // Update screen text with bullets and slime percentage
            screenText.text = bulletText + "\n" + slimeWeaponControllerScript.slimePercent.ToString("F0") + "%";

        }
    }

    // ============================================================
    // Public Methods
    // ============================================================

    public void retrievePlayerScript() {

        if (fpControllerWeaponScript == null) {

            GameObject playerObj = GameObject.FindWithTag("Player");

            if (playerObj != null) {

                fpControllerWeaponScript = playerObj.GetComponent<FPControllerWeapon>();

            }
        }
    }
}
