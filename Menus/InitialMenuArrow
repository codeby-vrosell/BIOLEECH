// ============================================================
// Readme of InitialMenuArrow
// ============================================================ 

// ============================================================
// Description 
// ============================================================ 

This script animates an arrow in the initial menu by moving it side to side in a smooth sinusoidal motion.  
It is typically used to draw attention to the currently selected menu option.  

// ============================================================
// Responsibilities
// ============================================================  

- Configurable horizontal movement distance and speed.  
- Stores the initial local position to use as the base for movement.  
- Updates the arrowâ€™s position every frame using a sine wave for smooth oscillation.  
- Provides a visual cue for menu navigation without requiring additional animations.  

// ============================================================
// End of readme
// ============================================================  



using UnityEngine;

public class InitialMenuArrow : MonoBehaviour {

    // ============================================================
    // Movement Settings
    // ============================================================

    public float distance = 20f;      // How far it will move side to side
    public float speed = 2f;          // How fast it moves

    // ============================================================
    // Internal Variables
    // ============================================================

    private Vector3 initialPosition;

    // ============================================================
    // Unity Lifecycle
    // ============================================================

    void Start() {

        initialPosition = transform.localPosition;

    }

    void Update() {

        float displacement = Mathf.Sin(Time.time * speed) * distance;
        transform.localPosition = initialPosition + new Vector3(displacement, 0f, 0f);

    }
}
