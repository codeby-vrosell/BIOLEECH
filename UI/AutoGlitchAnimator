// ============================================================  
// Readme of AutoGlitchAnimator  
// ============================================================  

// ============================================================  
// Description  
// ============================================================  

This script automatically triggers a glitch animation on a GameObject at fixed intervals.  
It also allows switching to an idle animation manually via a public method.  

// ============================================================  
// Responsibilities  
// ============================================================  

- Holds a reference to the `Animator` component to control animations.  
- Stores the name of the glitch animation and the interval between triggers.  
- Automatically plays the glitch animation every `interval` seconds during `Update()`.  
- Provides a public method `idleAnim()` to manually switch the animation to "Idle".  
- Ensures safe operation by checking if the animator reference exists before playing animations.  

// ============================================================  
// End of readme  
// ============================================================  



using UnityEngine;

public class AutoGlitchAnimator : MonoBehaviour {

    // ============================================================
    // Animation Settings
    // ============================================================

    public string animationName = "Anim_GlitchTransition";
    public float interval = 20f;

    // ============================================================
    // Internal References
    // ============================================================

    private Animator animator;
    private float nextTriggerTime;

    // ============================================================
    // Unity Lifecycle
    // ============================================================

    void Start() {

        animator = GetComponent<Animator>();
        nextTriggerTime = Time.time + interval;

    }

    void Update() {

        // Automatically trigger the glitch animation every "interval" seconds
        if (Time.time >= nextTriggerTime) {

            if (animator != null) {

                animator.Play(animationName);

            }

            nextTriggerTime = Time.time + interval;

        }
    }

    // ============================================================
    // Public Methods
    // ============================================================

    public void idleAnim() {

        if (animator != null) {

            animator.Play("Idle");

        }
    }
}
