// ============================================================  
// Readme of StimulantsController  
// ============================================================  

// ============================================================  
// Description  
// ============================================================  

This script manages the player's stimulant resources, updating UI elements and providing methods to increase or decrease the stimulant count.  

// ============================================================  
// Responsibilities  
// ============================================================  

- Tracks the current and maximum number of stimulants the player has.  
- Finds and updates `TextMeshProUGUI` elements to display the current and maximum stimulant counts.  
- Initializes stimulant counts based on the tutorial or game phase.  
- Provides public methods `decreaseStimulant()` and `increaseStimulant()` to modify the current stimulant count safely.  
- Ensures UI text always reflects the current state of the stimulants.  

// ============================================================  
// End of readme  
// ============================================================  



using TMPro;
using UnityEngine;

public class StimulantsController : MonoBehaviour {

    // ============================================================
    // Stimulant Counters
    // ============================================================

    public int currentStimulants;
    public int maxStimulants;

    [SerializeField] private TextMeshProUGUI currentStimulantsText;
    [SerializeField] private TextMeshProUGUI maxStimulantsText;

    // ============================================================
    // References
    // ============================================================

    private TutorialGameManager tutorialGameManagerScript;
    private GameManager gameManagerScript;

    // ============================================================
    // Unity Lifecycle
    // ============================================================

    private void Start() {

        tutorialGameManagerScript = FindFirstObjectByType<TutorialGameManager>();
        gameManagerScript = FindFirstObjectByType<GameManager>();

        if (tutorialGameManagerScript == null) {

            if (gameManagerScript.currentPhase != GameManager.GamePhases.onSpace) {

                currentStimulants = 3;

            }

            else {

                currentStimulants = 0;

            }
        }

        else {

            currentStimulants = 0;

        }
    }

    private void Update() {

        if (currentStimulantsText == null) {

            GameObject currentTextObj = GameObject.Find("NumStimsText");

            if (currentTextObj != null) {

                currentStimulantsText = currentTextObj.GetComponent<TextMeshProUGUI>();

            }
        }

        if (maxStimulantsText == null) {

            GameObject maxTextObj = GameObject.Find("Max");

            if (maxTextObj != null) {

                maxStimulantsText = maxTextObj.GetComponent<TextMeshProUGUI>();

            }
        }

        if (currentStimulantsText != null && maxStimulantsText != null) {

            currentStimulantsText.text = currentStimulants.ToString("0");
            maxStimulantsText.text = "/" + maxStimulants.ToString("0");

        }
    }

    // ============================================================
    // Public Methods
    // ============================================================

    public void decreaseStimulant() {

        if (currentStimulants > 0) {

            currentStimulants = currentStimulants - 1;

        }
    }

    public void increaseStimulant() {

        if (currentStimulants < maxStimulants) {

            currentStimulants = currentStimulants + 1;

        }
    }
}
